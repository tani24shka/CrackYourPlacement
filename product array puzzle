class Solution{
  public:
    // nums: given vecto
    // nums: given vector
    // return the Product vector P that hold product except self at each index
    std::vector<long long int> productExceptSelf(std::vector<long long int>& nums, int n) {
        long long int pd = 1;
        int c = 0;
        std::vector<long long int> v(n, 0);

        for (int i = 0; i < n; i++) {
            if (nums[i] != 0) {
                pd *= nums[i];
            } else {
                c++;
            }
        }

        for (int i = 0; i < n; i++) {
            if (nums[i] == 0) {
                if (c == 1) {
                    v[i] = pd;
                } else {
                    v[i] = 0;
                }
            } else {
                if (c > 0) {
                    v[i] = 0;
                } else {
                    v[i] = pd / nums[i];
                }
            }
        }

        return v;
    }
};
